<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.talis.labs.jersey</groupId>
  <artifactId>jersey-example</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
 
  <name>Jersey Example</name>
  <url>http://github.com/castagna/jersey-example</url>
  <inceptionYear>2011</inceptionYear>
  <description>Jersey Example</description>
 
  <organization>
    <name>Talis Systems Ltd.</name>
    <url>http://www.talis.com/</url>
  </organization>
   
  <developers>
    <developer>
      <name>Paolo Castagna</name>
    </developer>
  </developers>
 
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/castagna/jersey-example.git</connection>
    <url>http://github.com/castagna/jersey-example</url>
  </scm>

  <properties>
    <jersey.version>1.7-ea03</jersey.version>
    <jetty.version>7.4.0.v20110414</jetty.version>
    <servlet-api.version>2.5</servlet-api.version>

    <slf4j.version>1.6.1</slf4j.version>
    <junit.version>4.8.2</junit.version>
    <httpclient.version>4.1.1</httpclient.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.6</jdk.version>
  </properties>

  <distributionManagement>
    <repository>
      <id>talis-oss-releases</id>
      <url>http://oss.talisplatform.com/content/repositories/talis-releases</url>
    </repository>
    <snapshotRepository>
      <id>talis-oss-snapshots</id>
      <url>http://oss.talisplatform.com/content/repositories/talis-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope> <!-- This is necessary to allow using SLF4J from the Jetty Maven plugin -->
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>gerrit</groupId>
      <artifactId>executablewar</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>

<!-- 
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <scope>test</scope>
    </dependency>
 -->
    
  </dependencies>

  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>gerrit-repo</id>
      <url>http://gerrit.googlecode.com/svn/mavenrepo/</url>
      <layout>default</layout>
    </repository>
  </repositories>
  
  <build>
 
    <plugins>
 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions> 
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
	          <goal>jar</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-sources-test</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
         <buildOutputDirectory>${project.build.directory}/eclipse-classes</buildOutputDirectory>
         <downloadSources>true</downloadSources>
         <downloadJavadocs>false</downloadJavadocs>
         <useProjectReferences>false</useProjectReferences>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <remoteTagging>true</remoteTagging>
          <preparationGoals>clean install</preparationGoals>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <scanIntervalSeconds>1</scanIntervalSeconds>
          <stopKey>foo</stopKey>
          <stopPort>9999</stopPort>
          <webAppConfig>
            <contextPath>/</contextPath>
            <tempDirectory>${project.build.directory}/work</tempDirectory>
          </webAppConfig>
          <systemProperties>
            <systemProperty>
              <name>log4j.configuration</name>
              <value>file:${project.basedir}/src/test/resources/log4j.properties</value>
            </systemProperty>
            <systemProperty>
              <name>log4j.debug</name>
              <value></value>
            </systemProperty>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <type>jar</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>start-jetty</id>
            <!-- <phase>pre-integration-test</phase> -->
            <phase>test-compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <!-- <phase>post-integration-test</phase> -->
            <phase>prepare-package</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>Start</mainClass>
            </manifest>
          <!-- 
            <manifest>
              <mainClass>ExecutableWarMain</mainClass>
            </manifest>
            <manifestEntries>
              <Executable-War-Package>com.talis.labs.jersey</Executable-War-Package>
            </manifestEntries>
             -->
          </archive>
        </configuration>
      </plugin>

<!-- 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>make-executable</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>gerrit</groupId>
                  <artifactId>executablewar</artifactId>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/executablewar</outputDirectory>
                  <includes>**/*.class</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
 -->
 
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>fix-output</id>
            <phase>process-classes</phase>
            <configuration>
              <tasks>
                <property name="d" location="${basedir}/target/${project.build.finalName}"/>
                <copy todir="${d}">
                  <fileset dir="${basedir}/target/classes" includes="**/*"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

 
    </plugins> 
  </build>
  
</project>

